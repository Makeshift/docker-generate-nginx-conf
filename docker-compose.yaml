version: "3.4"
services:
  # Generates config for containers on the local Docker daemon
  nginx_conf_standard:
    image: makeshift27015/nginx-conf-generator
    environment:
      - 'docker_conf={"socketPath": "/var/run/docker.sock"}'
      - conf_dir=/conf
      - template=/template.vhost
      - suffix=standard
    volumes:
      - ./conf/:/conf
      - ./templates/template.vhost:/template.vhost
      - /var/run/docker.sock:/var/run/docker.sock

  # Generates config for containers on a remote Docker daemon
  nginx_conf_media:
    image: makeshift27015/nginx-conf-generator
    environment:
      - destination=media
      - 'docker_conf={"host": "media", "port": 2376}'
      - conf_dir=/conf
      - template=/template.vhost
      - suffix=media
    volumes:
      - ./conf/:/conf
      - ./templates/template.vhost:/template.vhost

  # Sends SIGHUP to all containers on the local Docker daemon that have the
  #  "proxy.notify" label when files in `./conf` are modified (`/watch` in the container)
  nginx_sighup:
    image: makeshift27015/nginx-sighup
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./conf/:/watch

  # Does Letsencrypt-y things, just as an example
  letsencrypt:
    image: adferrand/letsencrypt-dns
    environment:
      - LETSENCRYPT_USER_MAIL=
      - LEXICON_PROVIDER=cloudflare
      - LEXICON_CLOUDFLARE_USERNAME=
      - LEXICON_CLOUDFLARE_TOKEN=
    volumes:
      - ./domains.conf:/etc/letsencrypt/domains.conf
      - ./letsencrypt/:/etc/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock

  # The actual web server, config generated by above containers and mounted to `/etc/nginx/conf.d/`
  web:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    networks:
      - web
    labels:
      - proxy.notify
    volumes:
      - ./conf/:/etc/nginx/conf.d/
      - ./letsencrypt:/etc/letsencrypt
      - ./dhparam.pem:/etc/nginx/dhparam.pem
    depends_on:
      - nginx_conf_standard
      - nginx_conf_media
      - letsencrypt

  # An example of a container with basic labels
  example:
    image: example/example
    labels:
      - proxy.hosts=example.makeshift.ninja,example.local.makeshift.ninja,example.public.makeshift.ninja
      - proxy.port=80
      - proxy.isPublic
    networks:
      - web

  # An example of running Portainer with a custom vhost template
  portainer:
    image: portainer/portainer
    networks:
      - web
    volumes:
      - /var/run/docker_conf.sock:/var/run/docker.sock
      - ./data:/data
    labels:
      - proxy.hosts=portainer.makeshift.ninja,portainer.local.makeshift.ninja,portainer.public.makeshift.ninja
      - proxy.port=9000
      - proxy.template=/templates/portainer.vhost

networks:
  web:
    external: true
